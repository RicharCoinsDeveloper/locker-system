"""create tables with lengths

Revision ID: d87cb582e013
Revises: 
Create Date: 2025-09-11 20:26:39.208937

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd87cb582e013'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('lockers',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('installed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_methods',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permissions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rates',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('period', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cells',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('locker_id', sa.String(length=36), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['locker_id'], ['lockers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role_permissions',
    sa.Column('role_id', sa.String(length=36), nullable=False),
    sa.Column('permission_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('role_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('customer_accesses',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('customer_id', sa.String(length=36), nullable=True),
    sa.Column('locker_id', sa.String(length=36), nullable=True),
    sa.Column('cell_id', sa.String(length=36), nullable=True),
    sa.Column('accessed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cell_id'], ['cells.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['locker_id'], ['lockers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reservations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('customer_id', sa.String(length=36), nullable=True),
    sa.Column('locker_id', sa.String(length=36), nullable=True),
    sa.Column('cell_id', sa.String(length=36), nullable=True),
    sa.Column('start_at', sa.DateTime(), nullable=True),
    sa.Column('end_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['cell_id'], ['cells.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['locker_id'], ['lockers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_accesses',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('locker_id', sa.String(length=36), nullable=True),
    sa.Column('cell_id', sa.String(length=36), nullable=True),
    sa.Column('accessed_at', sa.DateTime(), nullable=True),
    sa.Column('access_type', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['cell_id'], ['cells.id'], ),
    sa.ForeignKeyConstraint(['locker_id'], ['lockers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('role_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('payments',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('reservation_id', sa.String(length=36), nullable=True),
    sa.Column('customer_id', sa.String(length=36), nullable=True),
    sa.Column('method_id', sa.String(length=36), nullable=True),
    sa.Column('cell_id', sa.String(length=36), nullable=True),
    sa.Column('rate_id', sa.String(length=36), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['cell_id'], ['cells.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['method_id'], ['payment_methods.id'], ),
    sa.ForeignKeyConstraint(['rate_id'], ['rates.id'], ),
    sa.ForeignKeyConstraint(['reservation_id'], ['reservations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('qrcodes',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('reservation_id', sa.String(length=36), nullable=True),
    sa.Column('code', sa.Text(), nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['reservation_id'], ['reservations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoices',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('payment_id', sa.String(length=36), nullable=True),
    sa.Column('cell_id', sa.String(length=36), nullable=True),
    sa.Column('issued_at', sa.DateTime(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('pdf', sa.LargeBinary(), nullable=True),
    sa.ForeignKeyConstraint(['cell_id'], ['cells.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('invoices')
    op.drop_table('qrcodes')
    op.drop_table('payments')
    op.drop_table('user_roles')
    op.drop_table('user_accesses')
    op.drop_table('reservations')
    op.drop_table('customer_accesses')
    op.drop_table('users')
    op.drop_table('role_permissions')
    op.drop_table('cells')
    op.drop_table('roles')
    op.drop_table('rates')
    op.drop_table('permissions')
    op.drop_table('payment_methods')
    op.drop_table('lockers')
    op.drop_table('customers')
    # ### end Alembic commands ###
